<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="csrf-token" content="<%= csrfToken %>"/>
    <title>To-do Manager</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="./css/styles.css" rel="stylesheet"/>
    <script>
    var token = document
        .querySelector('meta[name = "csrf-token"]')
        .getAttribute("content");

    async function updateTodo(id) {
        const response = await fetch(`/todos/${id}/markAsCompleted`, {
            method: "put",
            headers: {
                "Content-Type": "application/json",
                "csrf-token": token,// Use "csrf-token" here
            },
            body: JSON.stringify({
                "csrf-token": token,// other data
                completed: !currentCompletedStatus
            })
        })
        .then((res) => {
            if (res.ok) {
                console.log("Marked as completed successfully");
                window.location.reload();
            }
        })
        .catch((err) => console.error("Error marking as completed:", err));
    }
    // Example function to mark a todo as completed
async function markAsCompleted(id) {
  try {
    const response = await fetch(`/todos/${id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ completed: true }),
    });

    if (response.ok) {
      // Handle success (perhaps update UI)
    } else {
      // Handle error (display error message)
      console.error('Failed to mark todo as completed');
    }
  } catch (error) {
    console.error('Error marking todo as completed:', error);
  }
}

// Example usage
const overdueItemId = overdueTodos;
markAsCompleted(overdueItemId);
// Example function to toggle completion status
async function toggleCompletion(todoId, currentCompletedStatus) {
  try {
    const response = await fetch(`/todos/${todoId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ completed: !currentCompletedStatus }),
    });

    if (response.ok) {
      // Handle success (perhaps update UI)
    } else {
      // Handle error (display error message)
      console.error('Failed to toggle todo completion status');
    }
  } catch (error) {
    console.error('Error toggling todo completion status:', error);
  }
}

// Example usage
const itemIdToToggle = updateTodo;
const currentCompletedStatus = data[i].completed;
toggleCompletion(itemIdToToggle, currentCompletedStatus);


    async function deleteTodo(id) {
        const response = await fetch(`/todos/${id}`, {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json",
                "csrf-token": token, // Use "csrf-token" here
            },
            body: JSON.stringify({
                "csrf-token": token,// other data
            })
        })
        .then((res) => {
            if (res.ok) {
                console.log("Deleted successfully");
                window.location.reload();
            }
        })
        .catch((err) => console.error("Error deleting:", err));
    }
</script>
</head>
<body>
    <div class="grid grid-cols-6">
        <div class="col-start-3 col-span-2">
            <%- include('header.ejs') %>
            <form action="/todos" method="post">
                <input type="hidden" name="_csrf" value="<%= csrfToken %>"/>
                <div class="flex gap-2 py-4">
                    <div class="flex-auto">
                        <input type="text" name="title" placeholder="What's next?" class="border border-gray-300 rounded text-gray-900 w-full p-2 text-sm" required />
                    </div>
                    <div class="flex-auto">
                        <input type="date" name="dueDate" class="border border-gray-300 rounded text-gray-900 w-full p-2 text-sm leading-4" />
                    </div>
                    <div class="flex-none">
                        <button type="submit" class="bg-green-600 text-white px-5 py-1.5 rounded font-medium mr-2 mb">Add</button>
                    </div>
                </div>
            </form>
            <div>
                <%- include('todos.ejs', {title: "overdue", data: overdue}) %>
                <%- include('todos.ejs', {title: "Due Today", data: dueToday}) %>
                <%- include('todos.ejs', {title: "Due Later", data: dueLater}) %>
            </div>
        </div>
    </div>
</body>
</html>